apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  ## This is used by GitLab Omnibus as the primary means of configuration.
  ## ref: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template
  ##
  gitlab_omnibus_config: |
    external_url ENV['EXTERNAL_URL'];
    root_pass = ENV['GITLAB_ROOT_PASSWORD'];
    gitlab_rails['initial_root_password'] = root_pass unless root_pass.to_s == '';
    postgresql['enable'] = false;
    gitlab_rails['db_host'] = ENV['DB_HOST'];
    gitlab_rails['db_password'] = ENV['DB_PASSWORD'];
    gitlab_rails['db_username'] = ENV['DB_USER'];
    gitlab_rails['db_database'] = ENV['DB_DATABASE'];
    redis['enable'] = false;
    gitlab_rails['redis_host'] = ENV['REDIS_HOST'];
    gitlab_rails['redis_password'] = ENV['REDIS_PASSWORD'];
    unicorn['worker_processes'] = 2;
    manage_accounts['enable'] = true;
    manage_storage_directories['manage_etc'] = false;
    gitlab_shell['auth_file'] = '/gitlab-data/ssh/authorized_keys';
    git_data_dir '/gitlab-data/git-data';
    gitlab_rails['shared_path'] = '/gitlab-data/shared';
    gitlab_rails['uploads_directory'] = '/gitlab-data/uploads';
    gitlab_ci['builds_directory'] = '/gitlab-data/builds';
    {{- if .Values.email.enabled }}
    gitlab_rails['smtp_enable'] = true
    {{- if .Values.email.address }}
    gitlab_rails['smtp_address'] = "{{ .Values.email.address }}"
    {{- end }}
    {{- if .Values.email.port }}
    gitlab_rails['smtp_port'] = {{ .Values.email.port }}
    {{- end }}
    {{- if .Values.email.authentication }}
    gitlab_rails['smtp_authentication'] = "{{ .Values.email.authentication }}"
    {{- end }}
    {{- if .Values.email.enableStartTLSAuto }}
    gitlab_rails['smtp_enable_starttls_auto'] = true
    {{- else }}
    gitlab_rails['smtp_enable_starttls_auto'] = false
    {{- end }}
    {{- if .Values.email.username }}
    gitlab_rails['smtp_user_name'] = "{{ .Values.email.username }}"
    {{- end }}
    {{- if .Values.email.password }}
    gitlab_rails['smtp_password'] = "{{ .Values.email.password }}"
    {{- end }}
    {{- if .Values.email.domain }}
    gitlab_rails['smtp_domain'] = "{{ .Values.email.domain }}"
    {{- end }}
    {{- if .Values.email.from }}
    gitlab_rails['gitlab_email_from'] = "{{ .Values.email.from }}"
    {{- end }}
    {{- if .Values.email.replyTo }}
    gitlab_rails['gitlab_email_reply_to'] = "{{ .Values.email.replyTo }}"
    {{- end }}
    {{- if .Values.email.tls }}
    gitlab_rails['smtp_tls'] = true
    {{- end }}
    {{- end }}
    {{- if .Values.ingress.enabled }}
    {{- if .Values.ingress.sslEnabled }}
    nginx['listen_port'] = {{ .Values.httpPort }}
    nginx['listen_https'] = false
    nginx['proxy_set_headers'] = { "X-Forwarded-Proto" => "https", "X-Forwarded-Ssl" => "on" }
    {{- end }}
    {{- end }}
    {{- if .Values.prometheus.enabled }}
    prometheus_monitoring['enable'] = {{ .Values.prometheus.enabled }}
    {{- end }}
    {{- if .Values.registry.enabled }}
    registry_external_url '{{ .Values.registry.externalURL }}';
    registry['registry_http_addr'] = '0.0.0.0:{{ .Values.registry.internalPort }}'
    {{- if eq .Values.registry.storage.driver "s3" }}
    registry['storage'] = { 's3' => { 'accesskey' => '{{ .Values.registry.storage.s3.accessKey }}', 'secretkey' => '{{ .Values.registry.storage.s3.secretKey }}', 'bucket' => '{{ .Values.registry.storage.s3.bucket }}', 'region' => '{{ .Values.registry.storage.s3.region }}' } }
    {{- end }}
    {{- if .Values.registry.ingress.enabled }}
    registry_nginx['enable'] = false
    {{- end }}
    {{- end }}
